{"version":3,"sources":["view/CanvasView.ts","sprites/Ball.ts","sprites/Paddle.ts","Collision.ts","setup.ts","sprites/Brick.ts","helpers.ts","index.ts"],"names":[],"mappings":";;AOAA;;AACA;;AAEA;AJGA,AGNA,AFAA,AHEA,AIAA,AHAA,AFGA,IGCA,AFJA,AIAA,AHAA,AFGA,ICHA,CIAA,CHAA,GCIA,CHDA;AGCA,AIFA,ANFA,AIAA,AHAA,AFGA;AGCA,AGLA,AFAA,AHCA,AIAA,AHAA,AFGA,YGCA,AFJA,AIAA,AHAA,AFGA;AGCA,AIAA,ANAE,AIDA,AHEA,AFKA,WGNF,AFAE,AIDA,AHEA,AFKA,ICNA,CACE,AIFF,CACU,AHCV,CACU,ECFZ,CFAE,ADMA,CAAY,CGNd,AFEY,ACDV,CCkDD,CDhDW,EGJV,EAEU,EJDV,CDMA,CCHU,CDGoB,EEL9B,EAGU,EGLV,CJCA,CIEU,CJER,KAJF,EAIe,AILf,AHEA,EGEU,AHEA,QAJV,EAKE,CGPF,EAKE,EHHF,EAKe,CGPf,EAKe;ADRjB,AHMY,AIFA,AHCV,AFME,QENF,CDCU,AIFA,ALOH,IENP,EFME,CENF,CDCU,CDKM,CKPN,CJEA,ACDV,EGDU,ILOc,CAAC,CCLf,IIFA,QLOM,CAAuB,UAAvB,CAAd;AGNF,AIAF,ANEY,AIFA,ALOR,EGPF,OFEU,AIFA,ALOH,EGPP,CAAA,IHOE,CCLQ,EDKO,CCLP,AIFA,CFAV,CAAA,CEAU,CLOY,ICLZ,EDKO,CAAY,GKPnB,IFAV,GAAA,AHOiB,CAAuB,IAAvB,CAAf,IGPe,IAAjB,EAA6B,KAA7B,EAAyC;AACvC,ACLJ,AHCU,AIIE,AHAA,AFOR,QGNE,CFLI,AIIE,AHAA,AFOH,GGNC,CAAC,CDDC,ECCN,CAAS,AEDH,AHAA,CCCN,AFLI,EIIE,CFCO,AFLqB,ADWpC,CEPQ,EFOY,CCXoB,CEKpB,CAAC,CEDb,EFCO,AFLqB,CEKX,CAAV,AFLT,ADWsB,CAAC,EGNA,KAAK,CAAC,KAAjC,AHMkB,CAAuB,GGLzC,IAAI,CAAC,AHKa,CAApB,EGLE,CAAS,CAAT,GAAa,IAAI,CAAC,KAAlB,GAA0B,KAAK,CAAC,GAAN,CAAU,CADpC,IAEA,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,KAAK,CAAC,GAAN,CAAU,CAAV,GAAc,KAAK,CAAC,MAFjC,IAGA,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,IAAI,CAAC,MAAlB,GAA2B,KAAK,CAAC,GAAN,CAAU,CAJvC,EAKE;AACA,AILN,ANGI,AIHQ,AHAA,AFOR,SCJK,AIHG,AHAA,AFOH,IGFI,CHET,GGFE,AFFF,ADIa,GCJG,AIHR,AHAA,GGAA,AHAA,EFOa,CAAC,ECJtB,MIHQ,AHAA,KFOK,CAAuB,QAAvB,CAAb;AGDC,ACXL,AHSI,AIVM,AHOE,AFOR,SCJK,AIVC,AHOE,AFOH,IAAL,GAAY,CCJZ,EIVM,CJUU,CCHR,CGP6B,EHO7B,AFOY,CAAC,CKdoB,EJUzC,GIVqC,EAA/B,GHOE,EFOI,CAAuB,OAAvB,CAAZ;AOGJ,ANNI,AIFA,AHDQ,AFOT,SCJM,AIFA,AHDG,KDGR,GAAa,ACHL,EGCR,CHDQ,EGCU,MHDV,IGCR;AFIA,AFDE,AIFF,AHVM,MDYJ,CAAC,EAAE,AIFA,AHVC,ECaC,GFFM,EEEb,IEHA,AHVM,GGUa,AHVmB,IAAI,KAAJ,EGUtC,AHVM;ACcP,AFDG,AIFF,ALMF,EAAA,CGbA,GFSI,CAAC,EAAE,AIFA,CJEC,EDIR,CAAA,IKNE,GAAgB,ELMlB,CAAA,KKNE,ALMF,GAAA,YAAA;AIdF,AHQiB,AICb,AH0CF,KD3CE,IICK,AH0CP,WG1CE,AH0CF,GG1CqB,AH0CP,UAAC,CG1Cb,AH0CY,EAAiB;ACxC9B,AIZH,AHEA,AHWI,AIFA,AH0CA,GCpDJ,CAaE,KFDO,AIFA,CH0CD,CAAC,CAAC,IAAF,EDxCJ,CAAe,AIFf,CAAgB,CH0CD,CDxCf,CIFA,EJEqB,CIFC,IJEtB,CIFA,CH0CI,IAA0B,CAAC,CAAC,GAAF,KAAU,WAAxC,EAAqD,KAAI,CAAC,QAAL,GAAgB,KAAhB;AI9CnD,ACJN,AHAA,AHWG,AIFA,AH0CC,AFtCA,IIbE,CJaF,EAAA,EMTY,CFJJ,AFmDJ,AFtCJ,CEsCK,CAAC,CEnD+B,EJahC,CEsCD,KI/CF,AFJ2C,AFmD9B,CEnD+B,AJa9C,EMTwB,INSZ,IAAZ,CEsCI,EEnDiC,CAAuB,AJahD,CEsCmB,CAAC,AFtCpB,CEsCqB,GAAF,CFtCnB,IEsC6B,CEnDJ,AJazB,CIbhB,AJaI,EIXJ,CJWgB,KAAA,CAAZ,CEsCA,EACE,AFvCU,EAAA,CAAE,EEuCR,CAAC,MFvCK,CAAY,CAAZ,CEuCV,CFvCyB,CAAf,CEuCO,CFvCW,IEuC5B,CFvCiC,MAAL,CAAY,KAA9B,EAAqC,KAAK,MAAL,CAAY,MAAjD,CAAZ;AGDF,AGPA,ACMF,AL0CG,AFvCA,EGFD,CHAA,EEqCA,II5CO,EHOP,CAAA,SAAA,CAAA,AGPa,MAAN,CAAa,UHOpB,AGPqB,GHOrB,AGPoB,EAAM,OAAN,CHOF,CGPiB,CAAf,EHOpB,AGPoC,EHON,MAA9B,EAA6C;AAA7C,AGNE,ACQJ,AHXO,AHWL,AIFA,EJEA,AIFA,EEEE,AHXS,IDSX,AGNQ,ALQR,AIFA,CJEA,AIFA,ECNW,CCQD,CJFV,CGNc,CCQD,CJFb,CCTwB,CEGN,CAAC,CHMnB,AIEF,AHX6B,EAAtB,CHWL,AIFA,CCNc,ALQV,AIFA,CCNqB,CAAC,CAAC,CLQvB,CAAA,AIFA,CCN0B,ADM1B,CCNqB,IAAU,GLQnC,CIFA,CJEI,CIFA,MJEJ,CIFA,CJES,CIFA,ECNK,CAAZ;AACA,ACQJ,ANFE,AIFA,AH4CA,AFvCA,EAAA,EODE,IDRM,CCQD,ALwCP,EIhDW,CCQD,APCV,CODF,APCE,CMTc,CAAC,GAAG,IJgDlB,AFvCA,CAAA,EEuCgB,UIhDd,AJgDe,CAAD,EAAiB,AFvCjC,GAAA,UAAgB,aAAhB,EAAyD;AGHvD,AGJA,AFLG,AFoDH,AFxCF,IIZW,IDSL,AGJE,ANOR,CMPS,ALKT,AIFA,CH4CM,CAAC,CI/CK,AJ+CJ,CFxCR,CIZqB,EFoDf,AFxCN,CGHe,ACTS,EAAnB,CDSa,AHGlB,CEwCiB,GD1CjB,AIFA,CFCE,OD2CI,GI/CsB,CJ+CI,CAAC,CI/CF,AJ+CG,GAAF,CI/CG,IJ+CO,WAAxC,EAAqD,II/CN,CJ+CU,CAAC,QAAL,GAAgB,IAAhB,GI/CxB,CAA7B;AHMA,AGLA,ACOJ,ANFI,AIFA,AH4CA,IC1CA,IGLM,CAAC,ACOF,CJFC,AD0CF,CC1CG,AD0CF,CI/CK,AJ+CJ,CD1CC,AIFA,GH4CH,EC1CJ,AFAY,AIFA,CFEG,CIEnB,CAAqB,ALwCF,IKxCnB,CNFI,CMEiC,CFJjC,CFEgB,ID0CZ,CC1CW,CGLW,CHKH,CAAR,AD0CgB,CI/CF,AJ+CG,CC1CR,AD0CS,GI/CA,AJ+CF,KAAU,YAAzC,EACE,GIhD8C,EJgD1C,CAAC,SAAL,GAAiB,IAAjB,CIhD2B,CAA7B;AHME,AGJF,ACMF,AHbK,AHWJ,AIFA,AH6CA,EKzCD,EHbW,CHSF,AIFA,AH2CT,CKrCI,CAAC,CDNC,EHIE,ICXa,CDWT,AGJC,ACMb,CJFa,AIEC,CHbU,EAAnB,CEOa,CAAhB,EAAmB,KCMrB,EDN4B,EHIpB,CAAsB,AGJT,IHIb,EAA4B,KAA5B,CAAJ,EAAwC;AACtC,AGHJ,ACKF,EAAA,MJFM,EIEE,CDLN,CHGQ,CAAC,AIEA,KAAX,GNLS,AIFA,GCEP,CAAA,IHGI,SGHJ,CAAA,EAAA,EACK,GADL,EACQ,IADR,CAAA,EACQ,CACN,IAAI,YAAJ,CACE,kBADF,EAEE,mBAFF,EAGE;AAAE,ACCT,AHdM,AFAH,AFWA,IIXS,CJWT,CMEM,CAAC,ANFP,EMEO,AJbF,CIaD,ANFJ,IEXA,CFWK,EIXiB,AFAT,GEAY,AJWzB,CIXG,CFAH,IFWU,IAAV,IAAU,EAAA,KAAA,KAAA,CAAV,GAAU,KAAA,CAAV,GAAU,EAAA,CAAE,gBAAF,CAAmB,OAAnB,EAA4B,YAAA;AGElC,AGAK,ALLF,AIFA,AHLP,AFU4C,GCH9C,AIFA,GCOW,CAAC,EAAA,AJZL,GCYG,CHFoC,IGE/B,CAAC,EDZd,GAAmB,CCYX,EHFiD,CAAC,EGEjC,CAArB,EAAwB,AHF6B,CAAb,CEV5C;ACaM,AGDF,ACCP,AHbM,AHWL,AIFA,AHRE,AFS+D,ECCjE,AIFA,EDTW,CESP,ANCQ,CAAV,CMGI,CLFN,AIFA,CJEA,AIFA,AHRO,CCYC,KCbc,CDaR,CAAC,CCbU,GFCvB,ECYM,AFFR,AIFA,CFIsB,ACbS,AHW3B,AIFA,AHRkB,CCYd,EAAiB,AGAN,AFZjB,CDYM,AFFJ,CAAA,AIFA,CAAA,CDRE,CAAC,EEYD,CAJF,CJRF,CIaI,AFbJ,CAAW,AHUb,CGVc,ACQd,CJEI,CIFA,IDRgB,CAAC,EHUrB,CIFA,CJEU,CGVI,ACQJ,GDRmB,GEaV,OAAb,CALF,CADM,CADR,AFNwC,GAAG,CAAhC,GEMX,CAAA,AFNgD,UAAhD,IAA8D,aADjC,GAE7B,GAFG;ADcE,AGGN,AJfC,AFSD,GMbM,ANWP,EMQG,EAnBI,CAAP,CHcM,AFDN,AIFA,AHPO,MCYM,EDZX,GAAgB,IDSlB,AIFA,IHPE;ACaM,AGGT,ACHD,AHZO,AHSH,AIFA,AHPA,IEAS,KGYJ,ALZA,CCYC,GFHC,AIFA,EFKI,CAAC,ACZS,CFArB,CDSY,AIFA,CEKhB,AHZ4B,CGYR,ALZA,ECYV,EIAV,CHZkC,AFA9B,CCYsB,AIAU,ANHhC,CEGM,CCXN,CCMA,GDNI,CAAC,KAAL,CAAW,CAAC,MAAM,CAAC,MAAP,GAAgB,aAAa,GAAG,CAAjC,IAAsC,UAAjD,IAA+D,aADjC,GAE9B,EAFG;ADaE,AIAP,ANHC,AIFA,AHPC,AFSF,EOGA,APHA,GCFU,AIFA,CEON,CAAC,ELZE,GFSP,CAAA,EOGA,CAAc,ELZZ,GAAiB,CFSnB,CAAA,GOGA,ALZE,MFSF,GAAA,UAAU,KAAV,EAAuB;AMKxB,ACDC,AHXK,AFDH,AFSA,EOGF,EHXW,IJQN,CETE,CKYC,GAAG,APHD,GIRa,EGWvB,CHX0B,CFDxB,CDMQ,AIFA,AHJS,CECd,EFDH,CFSA,EETuB,AFSD,KETtB,AFS2B,CEjBd,CAUb,UFOsB,CAAkB,SAAlB,GAA8B,KAAK,CAAC,QAAN,EAA9B;AGGlB,AICP,APHE,GAFD,KGIM,SAAS,GAAG,IAAZ;AACD,ACXA,AHIK,AIFA,AHDR,GDGF,AIFA,CDFW,AFCT,QAAQ,CAAC,IEDa,GAAG,EAAtB,OFCH,CAA0B,SAA1B,EAAqC,KAAK,aAA1C;ACWC,AIDJ,ANHC,AIFA,AHJE,AFQF,ECFA,AIFA,ALIA,EERE,CCDA,GFOF,AIFA,CJEA,AIFA,GHJU,AFQV,CERW,AFQX,SAAA,CCFA,AIFA,ALIA,CCFI,AIFA,IJEA,CAAA,AIFA,AHJF,CGIE,AHJwB,CFQ5B,GAAA,GERE,CDMF,CIFA,AHJqC,CDMjC,CIFA,GHJsC,AFQjC,CCFT,CIFA,CJEO,CIFA,ALIP,EAAqB,KERnB;ACWA,ACZG,AFEJ,AFQC,IIVS,IJUN,CCHL,AIFA,EFOS,EHFC,IIVc,AJUtB,EAAc,CGEd,ACZyB,GAAtB,CHOL,AIFA,ALKqB,IAAL,CAAU,SAAV,GAAsB,IAAtB;AGGf,AIDH,ANJI,AIFA,ALKD,GGdD,AHYA,MOGO,INJE,AIFA,IEMX,CACE,ANLc,AIFA,IEMhB,EAEE,ENNE,AIFA,IEMJ,EAGE,MAHF,EAIE,IAJF,EAKE,SALF,EAKsB;AAEpB,AHlBK,AHQJ,AIFA,AHFD,EKcA,ALdA,EEJW,CHMJ,AIFA,GHAP,CKcO,ALdP,CKcQ,GAAR,CAAY,EHlBW,GAAG,EGkB1B,AHlBK,EFIL,CAAI,MAAA,CAAA,SAAJ,EAAI,OAAJ,EAAS;ACQR,AIOD,ALhBA,AFSA,EOOA,APPA,IOOI,CAAC,KAAL,APPA,CAAA,QCNO,AIFA,CLQP,CAAA,UAAA,GAAA,UAAW,KAAX,EAAsC;AOQtC,AHnBK,EGmBL,EHnBW,EGmBP,CAAC,ELhBL,KEHqB,GGmBrB,AHnBwB,CGmBR,AHnBX,MGmBL,ALhBA;ACUA,AIOA,ANfO,AIFA,AHCL,ECSF,AIOA,CNfA,AIFA,GEiBI,CAAC,IJPL,CAAA,CDTS,IKgBT,CAAgB,ALhBF,GCSd,CAAA,EIOA,KLhBE,WCSF,GAAA,UAAmB,IAAnB,EAA+B,MAA/B,EAA+C,IAA/C,EAA+D;AAC7D,AIOF,AHpBK,AHQL,AIFA,AHFC,AFOC,EOSF,ANZA,AIFA,EDNW,CFEF,CKkBL,CAAC,CNZL,AIFA,ALKK,CCHL,AIFA,ALKM,IIXc,CJWlB,EIXqB,AJWV,COSb,CAAgB,AHpBX,IGoBL,CNZA,AIFA,CEQoB,ANNhB,AIFA,CEeJ,GNbI,CAAA,AIFA,CAAA,QJEJ,CIFA,CJEI,CIFA,MJEJ,CIFA,CJES,CIFA;AFQP,AHDA,KAAA,EAAA,CGEE,CFPJ,AIFA,CLOE,EGEM,CAAC,EHFF,CGEH,CAAS,CAAT,GAAa,ADbR,CFWP,ECLF,AIFA,CFSqB,CAAC,EHFR,GGEV,CHFF,EGE4B,EHFhB,EAAA,EGEsB,CAAC,EHFvB,CGEgB,CAAW,CAArC,EHFU,CAAZ,CGGE,EHHU,EGGN,CAAC,EHHK,CGGV,AHHF,CGGW,CAAT,CHHU,EGGG,AHHH,CAAE,KGGO,CAAC,GAAP,AHHH,CGGc,AHFxB,CGEa,GAAe,CHFvB,CAAC,IGE4B,CAAC,AHHzB,EAEV,GGAA,EHAK,CAAC,CGEN,EHFA,CAAU,CGEN,AHJM,CGIL,CHDL,EGCA,CAAS,CAAT,CHDK,CAAC,CGCO,EHDb,CAAU,CGCO,AHJP,CGIQ,CHAlB,KGAA,AHAK,CAAC,IGAuB,CHJnB,EAKV,GGDmC,CAAC,CHC/B,CAAC,CGDuB,CAAW,CAH1C,EAIE,CHLU,CAAZ;AGME,AIGJ,AHrBK,AHQH,AIFA,ALaD,EOED,CPZA,CITW,EDkBP,AIGA,CAAC,GJHG,CAAC,EFVA,AIFA,EEeT,AHrBsB,GGaF,AHbK,AHQX,AIFA,CEiBd,EHvBK,MDkBD,AFVF,CIFA;AFaC,AFVF,AIFA,AHNQ,GAAT,ECU+D,AFJtD,AIFA,CFeP;AACA,AIGF,AHvBK,AFIL,AFgBA,EEhBA,AFgBA,EIpBW,EGwBR,ELpBH,CAAA,GKoBS,APJT,COIU,APJV,EIpBsB,GAAG,GAApB,AHMI,AIFA,CLgBT,CEhBA,AFgBA,CEhBI,CKoBD,IAAuB,CLpBtB,CAAA,EFgBJ,EOIgC,CAAC,APJjC,GOI0B,CAAW,ALpBrC,CKoB0B,CLpBtB,EKoBqC,CAAvC,CPJS,GOKR,CLrBH,EAAU,AFgBV,EAA0B,COKjB,CAAC,aAAP,IAAwB,MAAM,CAAC,GAAP,CAAW,CAAX,GAAe,IAAI,CAAC,MAAL,CAAY,KAAZ,GAAoB,MAAM,CAAC,KAFrE,EAGE;AACA,APPF,IOOE,IPPF,CEhBA,CKuBQ,CAAC,EPPT,GAAA,IAAA,COOE,GLvBF;AKwBC,AH1BI,AHII,AIFA,AHCP,GDCF,AIFA,CDFW,CH5Bb,CAoCE,OCLS,GEHc,EFGT,CEHuC,WFGnD;ACgBA,AClBF,ACKA,AHFC,AFeC,EKbF,ELaE,CIlBC,AFCO,GCiBJ,AEbN,CAAA,CLaQ,CAAC,CGAC,CAAC,GAAL,CAAS,CAAT,AHAJ,CAAe,EGAE,CCnBkC,CCMrD,CAAI,CFamB,CAAC,GEbpB,ALaa,CKbb,EFae,CAAY,CHAd,EAAK,EGAH,CEbnB,EFauC,AEbnC,IFauC,CAAC,GEb5C,EFaM,AEbI,IFa2C,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,CAAhE,EAAmE;AACjE,AIMH,AHxBD,AHOA,ADU0B,ECV1B,GGPG,CDkBC,AFXJ,CAAA,EIHA,CFcQ,CAAC,EHDiB,GCV1B,CAAA,CDU8B,CAAC,EEjBrB,GEF2C,ACMrD,GFcI,EHDsB,CAAgB,GCV1C,EDU0B,CCV1B,ADU0B,YCV1B;AEYG,AIOH,AHzBA,AHOE,AIHA,ALY8C,EOShD,GJpB+D,ACL5D,AJgBD,CGGA,GFZK,EMkBE,CAAC,CFrBD,CJGP,CAAW,CAAX,EIHY,CJGG,CAAC,KGVmC,AHU9B,IIHrB,CEqBF,ANlBkB,CMkBW,ANlBA,CAA3B,GMkBF,EAAmC,MAAnC,EAA2C,IAA3C;AACA,AHzBA,AHOC,AIHA,AHNS,AFkBT,GCXD,ACPA,AFgBA,EIdG,ACEO,CEuBJ,cAAc,GAAG,AH7B8B,SG6BrB,CAAC,iBAAV,CAA4B,IAA5B,EAAkC,MAAlC,CAAvB;AHxBA,ACKA,AHJA,EAAA,GEDG,GFCH,CAAA,cAAA,CAAI,MAAA,CAAA,SAAJ,EAAI,KAAJ,EAAO;ACiBL,AIQF,AH/BqD,AHarD,ADQF,CIrBO,CHaL,IMkBI,ANlBJ,CAAA,CEUM,CEZN,AHLA,AFeF,GGEY,CAAC,GAAL,AFVN,CEUe,AFVf,CEUM,CHFR,COUE,CJRmB,CAAjB,AIQkB,AFpBT,EFYW,ADjBtB,IGKA,EAAyB,GJEzB,GAAA,YAAA;AEWI,AIQF,ANlBA,AIFA,AHLA,AFhCJ,CAAA,EAAA,COyDI,EJRE,GIQG,ANlBA,CEUC,CAAC,AEZF,EEoBI,ALzBF,CKyBP,ANlBA,CAAW,CAAX,ECPY,CDOG,CAAC,EIFhB,GJEqB,AIFF,CHLnB,CCiBE,GFVc,CAAW,AIF3B,CJEA;AEWC,AIQD,AHzBG,AHOJ,AIFA,AHLA,GDKD,CMoBE,AHzBS,CCFD,AHAH,GK2BD,CAAC,OHzBgB,EGyBrB,CAAe,AHzBoC,KGyBnD;AJPD,AIQA,AHzBD,GDDA,ECCG,CADkD,eCF3C,AHAH;AEIP,AHOA,EAAA,GGPG,CAFkD,AHSrD,CAAA,SAAA,CAAA,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","file":"src.77de5100.js","sourceRoot":"..\\src","sourcesContent":["// Types\r\nimport { Ball } from '../sprites/Ball';\r\nimport { Brick } from '../sprites/Brick';\r\nimport { Paddle } from '../sprites/Paddle';\r\n\r\nexport class CanvasView {\r\n  canvas: HTMLCanvasElement;\r\n  private context: CanvasRenderingContext2D | null;\r\n  private scoreDisplay: HTMLObjectElement | null;\r\n  private start: HTMLObjectElement | null;\r\n  private info: HTMLObjectElement | null;\r\n\r\n  constructor(canvasName: string) {\r\n    this.canvas = document.querySelector(canvasName) as HTMLCanvasElement;\r\n    this.context = this.canvas.getContext('2d');\r\n    this.scoreDisplay = document.querySelector('#score');\r\n    this.start = document.querySelector('#start');\r\n    this.info = document.querySelector('#info');\r\n  }\r\n\r\n  clear(): void {\r\n    this.context?.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n  \r\n  initStartButton(startFunction: (view: CanvasView) => void): void {\r\n    this.start?.addEventListener('click', () => startFunction(this));\r\n  }\r\n\r\n  drawScore(score: number): void {\r\n    if(this.scoreDisplay) this.scoreDisplay.innerHTML = score.toString();\r\n  }\r\n\r\n  drawInfo(text: string): void {\r\n    if(this.info) this.info.innerHTML = text;\r\n  }\r\n\r\n  drawSprite(brick: Brick| Paddle | Ball): void {\r\n    if(!brick) return;\r\n\r\n    this.context?.drawImage(\r\n      brick.image,\r\n      brick.pos.x,\r\n      brick.pos.y,\r\n      brick.width,\r\n      brick.height\r\n    );\r\n  }\r\n\r\n  drawBricks(bricks: Brick[]): void {\r\n    bricks.forEach(brick => this.drawSprite(brick));\r\n  }\r\n}\r\n","import { Vector } from '../types';\r\n\r\nexport class Ball {\r\n  private speed: Vector;\r\n  private ballImage: HTMLImageElement = new Image();\r\n\r\n  constructor(\r\n    speed: number,\r\n    private ballSize: number,\r\n    private position: Vector,\r\n    image: string\r\n  ) {\r\n    this.ballSize = ballSize;\r\n    this.position = position;\r\n    this.speed = {\r\n      x: speed,\r\n      y: -speed\r\n    };\r\n    this.ballImage.src = image;\r\n  }\r\n\r\n  // Getters\r\n  get width(): number {\r\n    return this.ballSize;\r\n  }\r\n\r\n  get height(): number {\r\n    return this.ballSize;\r\n  }\r\n\r\n  get pos(): Vector {\r\n    return this.position;\r\n  }\r\n\r\n  get image(): HTMLImageElement {\r\n    return this.ballImage;\r\n  }\r\n\r\n  // Methods\r\n  changeYDirection(): void {\r\n    this.speed.y = -this.speed.y;\r\n  }\r\n\r\n  changeXDirection(): void {\r\n    this.speed.x = -this.speed.x;\r\n  }\r\n\r\n  moveBall(): void {\r\n    this.pos.x += this.speed.x;\r\n    this.pos.y += this.speed.y;\r\n  }\r\n};\r\n","import { Vector } from '../types';\r\n\r\nexport class Paddle {\r\n  private paddleImage: HTMLImageElement = new Image();\r\n  private moveLeft: boolean;\r\n  private moveRight: boolean;\r\n\r\n  constructor(\r\n    private speed: number,\r\n    private paddleWidth: number,\r\n    private paddleHeight: number,\r\n    private position: Vector,\r\n    image: string\r\n  ) {\r\n    this.speed = speed;\r\n    this.paddleWidth = paddleWidth;\r\n    this.paddleHeight = paddleHeight;\r\n    this.position = position;\r\n    this.moveLeft = false;\r\n    this.moveRight = false;\r\n    this.paddleImage.src = image;\r\n\r\n    // Event Listeners\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n    document.addEventListener('keyup', this.handleKeyUp);\r\n  }\r\n\r\n  // Getters\r\n  get width(): number {\r\n    return this.paddleWidth;\r\n  }\r\n\r\n  get height(): number {\r\n    return this.paddleHeight;\r\n  }\r\n\r\n  get pos(): Vector {\r\n    return this.position;\r\n  }\r\n\r\n  get image(): HTMLImageElement {\r\n    return this.paddleImage;\r\n  }\r\n\r\n  get isMovingLeft(): boolean {\r\n    return this.moveLeft;\r\n  }\r\n\r\n  get isMovingRight(): boolean {\r\n    return this.moveRight;\r\n  }\r\n\r\n  movePaddle(): void {\r\n    if (this.moveLeft) this.pos.x -= this.speed;\r\n    if (this.moveRight) this.pos.x += this.speed;\r\n  }\r\n\r\n  handleKeyUp = (e: KeyboardEvent): void => {\r\n    if (e.code === 'ArrowLeft' || e.key === 'ArrowLeft') this.moveLeft = false;\r\n    if (e.code === 'ArrowRight' || e.key === 'ArrowRight')\r\n      this.moveRight = false;\r\n  };\r\n\r\n  handleKeyDown = (e: KeyboardEvent): void => {\r\n    if (e.code === 'ArrowLeft' || e.key === 'ArrowLeft') this.moveLeft = true;\r\n    if (e.code === 'ArrowRight' || e.key === 'ArrowRight')\r\n      this.moveRight = true;\r\n  };\r\n};\r\n","// Types\r\nimport { Ball } from './sprites/Ball';\r\nimport { Brick } from './sprites/Brick';\r\nimport { Paddle } from './sprites/Paddle';\r\nimport { CanvasView } from './view/CanvasView';\r\n\r\nexport class Collision {\r\n  isCollidingBrick(ball: Ball, brick: Brick): boolean {\r\n    if (\r\n      ball.pos.x < brick.pos.x + brick.width &&\r\n      ball.pos.x + ball.width > brick.pos.x &&\r\n      ball.pos.y < brick.pos.y + brick.height &&\r\n      ball.pos.y + ball.height > brick.pos.y\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Check ball collision with bricks\r\n  isCollidingBricks(ball: Ball, bricks: Brick[]): boolean {\r\n    let colliding = false;\r\n\r\n    bricks.forEach((brick, i) => {\r\n      if (this.isCollidingBrick(ball, brick)) {\r\n        ball.changeYDirection();\r\n\r\n        if (brick.energy === 1) {\r\n          bricks.splice(i, 1);\r\n        } else {\r\n          brick.energy -= 1;\r\n        }\r\n        colliding = true;\r\n      }\r\n    });\r\n    return colliding;\r\n  };\r\n\r\n  checkBallCollision(ball: Ball, paddle: Paddle, view: CanvasView): void {\r\n    // 1. Check ball collision with paddle\r\n    if (\r\n      ball.pos.x + ball.width > paddle.pos.x &&\r\n      ball.pos.x < paddle.pos.x + paddle.width &&\r\n      ball.pos.y + ball.height === paddle.pos.y\r\n    ) {\r\n      ball.changeYDirection();\r\n    }\r\n    // 2. Check ball collision with walls\r\n    // Ball movement X constraints\r\n    if (ball.pos.x > view.canvas.width - ball.width || ball.pos.x < 0) {\r\n      ball.changeXDirection();\r\n    }\r\n    // Ball movement Y constraints\r\n    if (ball.pos.y < 0) {\r\n      ball.changeYDirection();\r\n    }\r\n  };\r\n};\r\n","import RED_BRICK_IMAGE from './images/brick-red.png';\nimport BLUE_BRICK_IMAGE from './images/brick-blue.png';\nimport GREEN_BRICK_IMAGE from './images/brick-green.png';\nimport YELLOW_BRICK_IMAGE from './images/brick-yellow.png';\nimport PURPLE_BRICK_IMAGE from './images/brick-purple.png';\n\n// Grab the canvas element for calculating the brick width\n// depending on canvas width\nconst canvas: HTMLCanvasElement | null = document.querySelector('#playField');\n\n// Constants\nexport const STAGE_PADDING = 10;\nexport const STAGE_ROWS = 20;\nexport const STAGE_COLS = 10;\nexport const BRICK_PADDING = 5;\nexport const BRICK_WIDTH = canvas\n  ? Math.floor((canvas.width - STAGE_PADDING * 2) / STAGE_COLS) - BRICK_PADDING\n  : 100;\nexport const BRICK_HEIGHT = canvas\n  ? Math.floor((canvas.height - STAGE_PADDING * 2) / STAGE_ROWS) - BRICK_PADDING\n  : 30;\nexport const PADDLE_WIDTH = 150;\nexport const PADDLE_HEIGHT = 25;\nexport const PADDLE_STARTX = 450;\nexport const PADDLE_SPEED = 10;\nexport const BALL_SPEED = 5;\nexport const BALL_SIZE = 20;\nexport const BALL_STARTX = 500;\nexport const BALL_STARTY = 400;\n\nexport const BRICK_IMAGES: { [key: number]: string } = {\n  1: RED_BRICK_IMAGE,\n  2: GREEN_BRICK_IMAGE,\n  3: YELLOW_BRICK_IMAGE,\n  4: BLUE_BRICK_IMAGE,\n  5: PURPLE_BRICK_IMAGE\n};\n\nexport const BRICK_ENERGY: { [key: number]: number } = {\n  1: 1, // Red brick\n  2: 1, // Green brick\n  3: 2, // Yellow brick\n  4: 2, // Blue brick\n  5: 3 // Purple brick\n};\n\n// prettier-ignore\nexport const LEVEL = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n  0, 2, 2, 2, 2, 2, 2, 2, 2, 0,\n  0, 3, 3, 3, 3, 3, 3, 3, 3, 0,\n  0, 0, 4, 4, 4, 4, 4, 4, 0, 0, \n  0, 0, 5, 5, 0, 0, 5, 5, 0, 0,\n];\n","import { Vector } from '../types';\r\n\r\nexport class Brick {\r\n  private brickImage: HTMLImageElement = new Image();\r\n\r\n  constructor(\r\n    private brickWidth: number,\r\n    private brickHeight: number,\r\n    private position: Vector,\r\n    private brickEnergy: number,\r\n    image: string\r\n  ) {\r\n    this.brickWidth = brickWidth;\r\n    this.brickHeight = brickHeight;\r\n    this.position = position;\r\n    this.brickEnergy = brickEnergy;\r\n    this.brickImage.src = image;\r\n  }\r\n\r\n  // Getters\r\n  get width(): number {\r\n    return this.brickWidth;\r\n  }\r\n\r\n  get height(): number {\r\n    return this.brickHeight;\r\n  }\r\n\r\n  get pos(): Vector {\r\n    return this.position;\r\n  }\r\n\r\n  get image(): HTMLImageElement {\r\n    return this.brickImage;\r\n  }\r\n\r\n  get energy(): number {\r\n    return this.brickEnergy;\r\n  }\r\n\r\n  // Setter\r\n  set energy(energy: number) {\r\n    this.brickEnergy = energy;\r\n  }\r\n};\r\n","import { Brick } from './sprites/Brick';\r\nimport {\r\n  BRICK_IMAGES,\r\n  LEVEL,\r\n  STAGE_COLS,\r\n  STAGE_PADDING,\r\n  BRICK_WIDTH,\r\n  BRICK_HEIGHT,\r\n  BRICK_PADDING,\r\n  BRICK_ENERGY\r\n} from './setup';\r\n\r\nexport function createBricks(): Brick[] {\r\n  return LEVEL.reduce((ack, element, i) => {\r\n    const row = Math.floor((i + 1) / STAGE_COLS);\r\n    const col = i % STAGE_COLS;\r\n\r\n    const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\r\n    const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\r\n\r\n    if (element === 0) return ack;\r\n\r\n    return [\r\n      ...ack,\r\n      new Brick(\r\n        BRICK_WIDTH,\r\n        BRICK_HEIGHT,\r\n        { x, y },\r\n        BRICK_ENERGY[element],\r\n        BRICK_IMAGES[element]\r\n      )\r\n    ];\r\n  }, [] as Brick[]);\r\n};\r\n","import { CanvasView } from './view/CanvasView';\nimport { Ball } from './sprites/Ball';\nimport { Brick } from './sprites/Brick';\nimport { Paddle } from './sprites/Paddle';\nimport { Collision } from './Collision';\n// Images\nimport BALL_IMAGE from './images/ball.png';\nimport PADDLE_IMAGE from './images/paddle.png';\n// Level and colors\nimport {\n  PADDLE_SPEED,\n  PADDLE_WIDTH,\n  PADDLE_HEIGHT,\n  PADDLE_STARTX,\n  BALL_SPEED,\n  BALL_SIZE,\n  BALL_STARTX,\n  BALL_STARTY\n} from './setup';\n// Helpers\nimport { createBricks } from './helpers';\n\nlet gameOver = false;\nlet score = 0;\n\nfunction setGameOver(view: CanvasView) {\n  view.drawInfo('Game Over!');\n  gameOver = false;\n};\n\nfunction setGameWin(view: CanvasView) {\n  view.drawInfo('You Won!');\n  gameOver = false;\n};\n\nfunction gameLoop(\n  view: CanvasView,\n  bricks: Brick[],\n  paddle: Paddle,\n  ball: Ball,\n  collision: Collision\n) {\n  console.log('Draw!');\n  view.clear();\n  view.drawBricks(bricks);\n  view.drawSprite(paddle);\n  view.drawSprite(ball);\n  // Move Ball\n  ball.moveBall();\n\n  // Move paddle and check so it won't exit the playField\n  if (\n    (paddle.isMovingLeft && paddle.pos.x > 0) ||\n    (paddle.isMovingRight && paddle.pos.x < view.canvas.width - paddle.width)\n  ) {\n    paddle.movePaddle();\n  };\n\n  collision.checkBallCollision(ball, paddle, view);\n  const collidingBrick = collision.isCollidingBricks(ball, bricks);\n\n  if (collidingBrick) {\n    score += 1;\n    view.drawScore(score);\n  };\n\n  // Game Over when ball leaves playField\n  if (ball.pos.y > view.canvas.height) gameOver = true;\n  // If game won, set gameOver and display win\n  if (bricks.length === 0) return setGameWin(view);\n  // Return if gameOver and don't run the requestAnimationFrame\n  if (gameOver) return setGameOver(view);\n\n  requestAnimationFrame(() => gameLoop(view, bricks, paddle, ball, collision));\n};\n\nfunction startGame(view: CanvasView) {\n  // Reset displays\n  score = 0;\n  view.drawInfo('');\n  view.drawScore(0);\n  // Create a Collision instance\n  const collision = new Collision();\n  // Create all bricks\n  const bricks = createBricks();\n  // Create a Ball\n  const ball = new Ball(\n    BALL_SPEED,\n    BALL_SIZE,\n    { x: BALL_STARTX, y: BALL_STARTY },\n    BALL_IMAGE\n  );\n  // Create a Paddle\n  const paddle = new Paddle(\n    PADDLE_SPEED,\n    PADDLE_WIDTH,\n    PADDLE_HEIGHT,\n    {\n      x: PADDLE_STARTX,\n      y: view.canvas.height - PADDLE_HEIGHT - 5\n    },\n    PADDLE_IMAGE\n  );\n\n  gameLoop(view, bricks, paddle, ball, collision);\n};\n// Create a new view\nconst view = new CanvasView('#playField');\nview.initStartButton(startGame);\n"]}